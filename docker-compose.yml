version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: megasys_db
    environment:
      POSTGRES_DB: megasys
      POSTGRES_USER: megasys_user
      POSTGRES_PASSWORD: megasys_pass_2024
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - megasys_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U megasys_user -d megasys"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: megasys_backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: megasys
      DB_USER: megasys_user
      DB_PASSWORD: megasys_pass_2024
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/uploads:/app/uploads
    ports:
      - "4000:4000"
    networks:
      - megasys_network
    command: npm run dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: megasys_frontend
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    networks:
      - megasys_network
    command: npm run dev

  nginx:
    image: nginx:alpine
    container_name: megasys_nginx
    depends_on:
      - backend
      - frontend
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    networks:
      - megasys_network

volumes:
  postgres_data:

networks:
  megasys_network:
    driver: bridge